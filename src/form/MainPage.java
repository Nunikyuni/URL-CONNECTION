package form;

import clases.Download;
import static clases.Download.COMPLETE;
import clases.DownloadsTableModel;
import clases.ProgressRenderer;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.Observable;
import java.util.Observer;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileSystemView;


/**
 *
 * @author Computer
 */
public class MainPage extends javax.swing.JFrame implements Observer {

    private DownloadsTableModel tableModel;
    private Download selectedDownload;
    private String folder;
    
    private boolean clearing;
    

//    private Download selectedDownload;
    

    /**
     * Creates new form MainPage
     */
    public MainPage() {
        initComponents();
        //this.folder = FileSystemView.getFileSystemView().getDefaultDirectory().getPath() + File.separator;
//        defaultFolder.setText(this.folder);
          addTextField.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pauseDownload = new javax.swing.JButton();
        deleteDownload = new javax.swing.JButton();
        searchDownload = new javax.swing.JButton();
        menuDownload = new javax.swing.JButton();
        resumeDownload = new javax.swing.JButton();
        addFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        addTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableModel = new DownloadsTableModel();
        table = new javax.swing.JTable(tableModel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 204));

        pauseDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icons8-pause-30.png"))); // NOI18N
        pauseDownload.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pauseDownload.setBorderPainted(false);
        pauseDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseDownloadActionPerformed(evt);
            }
        });

        deleteDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icons8-full-trash-30.png"))); // NOI18N
        deleteDownload.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        deleteDownload.setBorderPainted(false);
        deleteDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDownloadActionPerformed(evt);
            }
        });

        searchDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icons8-search-30.png"))); // NOI18N
        searchDownload.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDownloadActionPerformed(evt);
            }
        });

        menuDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icons8-menu-30.png"))); // NOI18N
        menuDownload.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        menuDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDownloadActionPerformed(evt);
            }
        });

        resumeDownload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icons8-next-30.png"))); // NOI18N
        resumeDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeDownloadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pauseDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resumeDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchDownload, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                    .addComponent(menuDownload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(pauseDownload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(deleteDownload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(resumeDownload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        addFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/form/icon_download.png"))); // NOI18N
        addFile.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addFile.setBorderPainted(false);
        addFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFileActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Enter URL : ");

        addTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTextFieldActionPerformed(evt);
            }
        });

        setupTable();
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addFile, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(0, 9, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(addTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFileActionPerformed
        // TODO add your handling code here:
        actionAdd(); 
        
    }//GEN-LAST:event_addFileActionPerformed

    private void menuDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDownloadActionPerformed
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(this, "Sorry this menu still under constraction", "WARNING", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_menuDownloadActionPerformed

    private void addTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addTextFieldActionPerformed

    private void deleteDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDownloadActionPerformed
        // TODO add your handling code here:
        actionClear();
    }//GEN-LAST:event_deleteDownloadActionPerformed

    private void pauseDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseDownloadActionPerformed
        // TODO add your handling code here:
        actionPause();
        
    }//GEN-LAST:event_pauseDownloadActionPerformed

    private void resumeDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeDownloadActionPerformed
        // TODO add your handling code here:
        actionResume();
        
        
    }//GEN-LAST:event_resumeDownloadActionPerformed

    private void searchDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDownloadActionPerformed

        choose ch = new choose();
        ch.setVisible(true);
    }//GEN-LAST:event_searchDownloadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainPage().setVisible(true);
            }
        });
    }
    
    
    private void updateButtons() {
        if (selectedDownload != null) {
            int status = selectedDownload.getStatus();
            switch (status) {
                case Download.DOWNLOADING:
                    pauseDownload.setEnabled(true);
                    resumeDownload.setEnabled(false);
                    deleteDownload.setEnabled(false);
                    break;
                case Download.PAUSED:
                    pauseDownload.setEnabled(false);
                    resumeDownload.setEnabled(true);
                    deleteDownload.setEnabled(false);
                    break;
                case Download.ERROR:
                    pauseDownload.setEnabled(false);
                    resumeDownload.setEnabled(true);
                    deleteDownload.setEnabled(true);
                    break;
                default: // COMPLETO O CANCELADO
                    pauseDownload.setEnabled(false);
                    resumeDownload.setEnabled(false);
                    deleteDownload.setEnabled(true);
                    
            }
        } else {
            pauseDownload.setEnabled(false);
            resumeDownload.setEnabled(false);
            deleteDownload.setEnabled(false);
        }
    }
 
    private void actionExit() {
        System.exit(0);
    }
    
    private void actionAdd() {
        URL verifiedUrl = verifyUrl(addTextField.getText());
        if (verifiedUrl != null) {
            tableModel.addDownload(new Download(verifiedUrl, this.folder));
            addTextField.setText("");
            
        } else {
            JOptionPane.showMessageDialog(this, "Link Invalid!.", "Error", JOptionPane.ERROR_MESSAGE);
        }    
      
    }
   
    private URL verifyUrl(String url) {
       
        String urlRegex = "^(http|https)://[-a-zA-Z0-9+&@#/%?=~_|,!:.;]*[-a-zA-Z0-9+@#/%=&_|]";
        Pattern pattern = Pattern.compile(urlRegex);
        Matcher m = pattern.matcher(url);
        if (! m.matches()){
            return null;
        }
        
        URL verifiedUrl = null;
        try {
            verifiedUrl = new URL(url);
        } catch (Exception e) {
            return null;
        }
        
        if (verifiedUrl.getFile().length() < 2)
            return null;
        return verifiedUrl;
    }
   
    private void tableSelectionChanged() {
        
        if (selectedDownload != null){
            selectedDownload.deleteObserver(MainPage.this);
            
        }
        
        
        if ((!clearing) && (table.getSelectedRow()>-1)) {
            selectedDownload = tableModel.getDownload(table.getSelectedRow());
            selectedDownload.addObserver(MainPage.this);
            updateButtons();
           
        }
    }
    
    private void actionPause() {       
        selectedDownload.pause();
        updateButtons();
    }
    
    private void actionResume() {
       
        selectedDownload.resume();
        updateButtons();
    }
   
   
    private void actionClear() {
        clearing = true;
        tableModel.clearDownload(table.getSelectedRow());
        clearing = false;
        selectedDownload = null;
        updateButtons();
    }
   
    private void setupTable(){
        table.getSelectionModel().addListSelectionListener(new
            ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    tableSelectionChanged();
                }
            });
        
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
       
        ProgressRenderer renderer = new ProgressRenderer(0, 100);
        renderer.setStringPainted(true); 
        table.setDefaultRenderer(JProgressBar.class, renderer);
      
        table.setRowHeight((int) renderer.getPreferredSize().getHeight());
    }
    
    

   

    @Override
    public void update(Observable o, Object arg) {
       
        if (selectedDownload != null && selectedDownload.equals(o))
            updateButtons();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFile;
    private javax.swing.JTextField addTextField;
    private javax.swing.JButton deleteDownload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menuDownload;
    private javax.swing.JButton pauseDownload;
    private javax.swing.JButton resumeDownload;
    private javax.swing.JButton searchDownload;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
